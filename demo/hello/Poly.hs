import CanvasHs
import CanvasHs.Data

-- Onze state is een getal
type State = Int

-- De initiele state
initState = 0

hello = [(220, 250), (276,211),(279,205),(287,193),(298,175),(298,168),(298,155),(297,135),(294,132),(289,125),(281,115),(277,115),(269,115),(257,114),(255,118),(249,125),(241,136),(242,147),(242,169),(242,202),(242,216),(241,244),(240,286),(240,291),(240,300),(241,314),(245,305),(253,287),(266,261),(269,258),(275,251),(284,242),(289,240),(299,237),(314,232),(316,238),(321,249),(328,266),(328,272),(329,283),(330,300),(333,301),(338,305),(346,306),(351,303),(361,297),(375,286),(380,281),(390,271),(405,257),(406,254),(407,248),(409,238),(406,235),(400,230),(390,222),(385,223),(376,226),(362,230),(361,234),(359,241),(356,252),(359,259),(364,274),(371,297),(376,299),(385,304),(399,310),(406,309),(419,307),(439,303),(443,297),(452,286),(465,268),(469,257),(478,235),(491,201),(492,195),(495,182),(499,163),(498,159),(497,151),(495,140),(491,138),(483,134),(471,128),(468,130),(462,134),(453,140),(451,156),(448,188),(445,236),(445,244),(446,259),(447,282),(448,285),(451,291),(455,300),(461,301),(473,304),(490,305),(494,304),(502,303),(513,300),(518,293),(529,279),(543,257),(547,250),(555,235),(567,213),(569,206),(573,192),(578,172),(578,167),(577,158),(576,144),(572,143),(564,142),(553,140),(551,147),(545,160),(537,180),(536,193),(533,220),(530,260),(530,265),(530,276),(531,292),(533,295),(535,302),(539,311),(544,312),(554,315),(570,318),(576,317),(589,315),(608,311),(613,308),(623,302),(638,294),(638,288),(638,276),(637,258),(634,255),(627,249),(617,241),(612,242),(602,244),(587,246),(584,249),(578,255),(570,264),(570,268),(569,276),(568,288),(571,292),(576,299),(584,310),(593,311),(610,314),(636,316),(640,316),(648,316),(661,315)]

-- registreer jezelf bij Canvas.hs met de functie handler en de initiele state 0
main = installEventHandler handler initState

-- de functie die vanuit Canvas.hs aangeroepen wordt
handler :: State -> Event -> (State, Output)
handler state StartEvent = (state, actions $ [Timer 50 "hellotimer", Debug False])

handler state (Tick "hellotimer")
    | state < (length hello) = (state + 1, shape $ Container 900 600 [Translate 100 100 $ Stroke (0,0,0,1.0) 5 $ Line (take state hello)])
    | otherwise = (state,actions $ [StopTimer "hellotimer"])

handler state _ = (state, nothing)
